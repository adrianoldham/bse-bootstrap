@container-fluid-max-width: @container-large-desktop;
@container-fluid-gutter: @grid-gutter-width;

// Large screen / wide desktop
//** Deprecated `@screen-xl` as of v3.0.1
@screen-xl:                  1600px;
@screen-xl-min:              @screen-xl;
//** Deprecated `@screen-xl-desktop` as of v3.0.1
@screen-xl-desktop:          @screen-xl-min;

// Large screen / wide desktop
@container-extra-large-desktop:      (1540px + @grid-gutter-width);
//** For `@screen-xl-min` and up.
@container-xl:                 @container-extra-large-desktop;

@screen-lg-max:                (@screen-xl-min - 1);

.container-fluid(
    @max-width: @container-fluid-max-width;
    @gutter: @container-fluid-gutter;
    ) {
    width: auto;
    max-width: @max-width;
    .container-fixed(@gutter);
}

.container-reset {
    margin-left: 0;
    margin-right: 0;
    padding-left: 0;
    padding-right: 0;
    width: auto;
    max-width: 100%;
}

.container-xl {
  @media (min-width: @screen-xl-min) {
    width: @container-xl;
  }
}

@media (min-width: @screen-xl-min) {
  .make-grid(xl);
}

// Generate the extra large columns
.make-xl-column(@columns; @gutter: @grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-right: (@gutter / 2);
  padding-left: (@gutter / 2);

  @media (min-width: @screen-xl-min) {
    float: left;
    width: percentage((@columns / @grid-columns));
  }
}
.make-xl-column-offset(@columns) {
  @media (min-width: @screen-xl-min) {
    margin-left: percentage((@columns / @grid-columns));
  }
}
.make-xl-column-push(@columns) {
  @media (min-width: @screen-xl-min) {
    left: percentage((@columns / @grid-columns));
  }
}
.make-xl-column-pull(@columns) {
  @media (min-width: @screen-xl-min) {
    right: percentage((@columns / @grid-columns));
  }
}
